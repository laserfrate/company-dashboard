{"version":3,"sources":["components/CompanyForm.js","components/Report.js","components/Dashboard.js","App.js","index.js"],"names":["CompanyForm","_ref","onGenerateReport","companies","setCompanies","useState","name","address","domain","handleChange","index","event","value","target","map","company","i","_jsxs","onSubmit","preventDefault","children","className","_jsx","type","placeholder","onChange","e","required","onClick","handleAddCompany","Report","results","showVeridion","showNews","showGooglePlaces","currentPage","setCurrentPage","itemsPerPage","isEmptyData","data","Object","keys","length","error","array","pageNumber","slice","result","Helmet","content","concat","property","window","location","href","veridionData","idx","key","replace","newsData","news","title","source","author","description","url","rel","googlePlacesData","address_components","component","types","join","long_name","formatted_address","phone_number","international_phone_number","geometry","lat","lng","opening_hours","weekday_text","hours","photos","photo","src","photo_reference","process","REACT_APP_GOOGLE_PLACES_API_KEY","alt","place_id","plus_code","global_code","rating","reviews","review","author_name","text","vicinity","website","paginate","Dashboard","App","setResults","counts","setCounts","veridion","googlePlaces","setShowVeridion","setShowNews","setShowGooglePlaces","showDashboard","setShowDashboard","handleToggle","toggleFunction","prevState","async","response","fetch","method","headers","body","JSON","stringify","json","newCounts","forEach","console","_Fragment","handleGenerateDashboard","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"yPAyDeA,MAvDKC,IAA2B,IAA1B,iBAAEC,GAAkBD,EACrC,MAAOE,EAAWC,GAAgBC,mBAAS,CAAC,CAAEC,KAAM,GAAIC,QAAS,GAAIC,OAAQ,MAEvEC,EAAeA,CAACC,EAAOC,KACzB,MAAM,KAAEL,EAAI,MAAEM,GAAUD,EAAME,OAC9BT,EAAaD,EAAUW,KAAI,CAACC,EAASC,IACjCA,IAAMN,EAAQ,IAAKK,EAAS,CAACT,GAAOM,GAAUG,IAC/C,EAYP,OACIE,eAAA,QAAMC,SANYP,IAClBA,EAAMQ,iBACNjB,EAAiBC,EAAU,EAIEiB,SAAA,CACxBjB,EAAUW,KAAI,CAACC,EAASL,IACrBO,eAAA,OAAiBI,UAAU,iBAAgBD,SAAA,CACvCE,cAAA,SACIC,KAAK,OACLjB,KAAK,OACLkB,YAAY,eACZZ,MAAOG,EAAQT,KACfmB,SAAWC,GAAMjB,EAAaC,EAAOgB,GACrCC,UAAQ,IAEZL,cAAA,SACIC,KAAK,OACLjB,KAAK,UACLkB,YAAY,kBACZZ,MAAOG,EAAQR,QACfkB,SAAWC,GAAMjB,EAAaC,EAAOgB,KAEzCJ,cAAA,SACIC,KAAK,OACLjB,KAAK,SACLkB,YAAY,iBACZZ,MAAOG,EAAQP,OACfiB,SAAWC,GAAMjB,EAAaC,EAAOgB,OArBnChB,KAyBdO,eAAA,OAAKI,UAAU,eAAcD,SAAA,CACzBE,cAAA,UAAQC,KAAK,SAASK,QAtCTC,KACrBzB,EAAa,IAAID,EAAW,CAAEG,KAAM,GAAIC,QAAS,GAAIC,OAAQ,KAAM,EAqCXY,SAAC,wBACjDE,cAAA,UAAQC,KAAK,SAAQH,SAAC,yBAEvB,E,aCiHAU,MAlKA7B,IAQR,IARS,QACZ8B,EAAO,aACPC,EAAY,SACZC,EAAQ,iBACRC,EAAgB,YAChBC,EAAW,eACXC,EAAc,aACdC,GACHpC,EACG,MAAMqC,EAAeC,IACTA,GAAqC,IAA7BC,OAAOC,KAAKF,GAAMG,QAAiBH,EAAKI,OAASJ,EAAKI,MAAMD,OAAS,EAOzF,OACIpB,cAAA,OAAKD,UAAU,mBAAkBD,UALnBwB,EAMAb,EANOc,EAMEV,EALhBS,EAAME,OAAOD,EAAa,GAAKR,EAAcQ,EAAaR,IAK7BvB,KAAI,CAACiC,EAAQrC,IACzCO,eAAA,OAAiBI,UAAU,cAAaD,SAAA,CACpCH,eAAC+B,IAAM,CAAA5B,SAAA,CACHH,eAAA,SAAAG,SAAA,CAAQ2B,EAAOzC,KAAK,uBACpBgB,cAAA,QAAMhB,KAAK,cAAc2C,QAAO,uBAAAC,OAAyBH,EAAOzC,QAChEgB,cAAA,QAAMhB,KAAK,WAAW2C,QAAO,mBAAAC,OAAqBH,EAAOzC,KAAI,qBAC7DgB,cAAA,QAAM6B,SAAS,WAAWF,QAAO,GAAAC,OAAKH,EAAOzC,KAAI,uBACjDgB,cAAA,QAAM6B,SAAS,iBAAiBF,QAAO,uBAAAC,OAAyBH,EAAOzC,QACvEgB,cAAA,QAAM6B,SAAS,SAASF,QAASG,OAAOC,SAASC,OACjDhC,cAAA,QAAMhB,KAAK,eAAe2C,QAAQ,wBAClC3B,cAAA,QAAMhB,KAAK,gBAAgB2C,QAAO,GAAAC,OAAKH,EAAOzC,KAAI,uBAClDgB,cAAA,QAAMhB,KAAK,sBAAsB2C,QAAO,uBAAAC,OAAyBH,EAAOzC,WAE5EgB,cAAA,MAAID,UAAU,eAAcD,SAAE2B,EAAOzC,OACrCW,eAAA,OAAKI,UAAU,eAAcD,SAAA,CACzBE,cAAA,UAAAF,SAAQ,aAAiB,IAAE2B,EAAOxC,QAAQ,IAACe,cAAA,SAC3CA,cAAA,UAAAF,SAAQ,YAAgB,IAAE2B,EAAOvC,UAEpCwB,GACGf,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,mBACHkB,EAAYS,EAAOQ,cAChBjC,cAAA,KAAAF,SAAG,2CAEHE,cAAA,OAAKD,UAAU,iBAAgBD,SAC1B2B,EAAOQ,aAAazC,KAAI,CAACyB,EAAMiB,IAC5BlC,cAAA,OAAeD,UAAU,kBAAiBD,SACrCoB,OAAOC,KAAKF,GAAMzB,KAAK2C,GACpBxC,eAAA,KAAAG,SAAA,CAAaH,eAAA,UAAAG,SAAA,CAASqC,EAAIC,QAAQ,KAAM,KAAK,OAAU,IAAEnB,EAAKkB,KAAtDA,MAFND,UAU7BvB,GACGhB,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,eACHkB,EAAYS,EAAOY,UAChBrC,cAAA,KAAAF,SAAG,qCAEH2B,EAAOY,SAAS7C,KAAI,CAAC8C,EAAMJ,IACvBvC,eAAA,OAAeI,UAAU,eAAcD,SAAA,CACnCE,cAAA,MAAAF,SAAKwC,EAAKC,QACV5C,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAEwC,EAAKE,OAAOxD,QACzCW,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAEwC,EAAKG,UAClCzC,cAAA,KAAAF,SAAIwC,EAAKI,cACT1C,cAAA,KAAGgC,KAAMM,EAAKK,IAAKpD,OAAO,SAASqD,IAAI,sBAAqB9C,SAAC,gBALvDoC,QAWzBtB,GACejB,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,wBACHkB,EAAYS,EAAOoB,kBAChB7C,cAAA,KAAAF,SAAG,gDAEHH,eAAA,OAAKI,UAAU,iBAAgBD,SAAA,CAC1B2B,EAAOoB,iBAAiBC,oBAAsBrB,EAAOoB,iBAAiBC,mBAAmB1B,OAAS,GAC/FzB,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,wBACH2B,EAAOoB,iBAAiBC,mBAAmBtD,KAAI,CAACuD,EAAWb,IACxDvC,eAAA,KAAAG,SAAA,CAAaH,eAAA,UAAAG,SAAA,CAASiD,EAAUC,MAAMC,KAAK,MAAM,OAAU,IAAEF,EAAUG,YAA/DhB,QAInBT,EAAOoB,iBAAiBM,mBACrBxD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,uBAA2B,IAAE2B,EAAOoB,iBAAiBM,qBAEnE1B,EAAOoB,iBAAiBO,cACrBzD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,kBAAsB,IAAE2B,EAAOoB,iBAAiBO,gBAE9D3B,EAAOoB,iBAAiBQ,4BACrB1D,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,gCAAoC,IAAE2B,EAAOoB,iBAAiBQ,8BAE5E5B,EAAOoB,iBAAiBS,UAAY7B,EAAOoB,iBAAiBS,SAASvB,UAClEpC,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,cACJH,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiBS,SAASvB,SAASwB,OACzE5D,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,eAAmB,IAAE2B,EAAOoB,iBAAiBS,SAASvB,SAASyB,UAGjF/B,EAAOoB,iBAAiBY,eAAiBhC,EAAOoB,iBAAiBY,cAAcC,cAAgBjC,EAAOoB,iBAAiBY,cAAcC,aAAatC,OAAS,GACxJzB,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,mBACH2B,EAAOoB,iBAAiBY,cAAcC,aAAalE,KAAI,CAACmE,EAAOzB,IAC5DlC,cAAA,KAAAF,SAAc6D,GAANzB,QAInBT,EAAOoB,iBAAiBe,QAAUnC,EAAOoB,iBAAiBe,OAAOxC,OAAS,GACvEzB,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,YACH2B,EAAOoB,iBAAiBe,OAAOpE,KAAI,CAACqE,EAAO3B,IACxClC,cAAA,OAAe8D,IAAG,gFAAAlC,OAAkFiC,EAAME,gBAAe,SAAAnC,OAAQoC,yNAAYC,iCAAmCC,IAAI,SAA1KhC,QAIrBT,EAAOoB,iBAAiBsB,UACrBxE,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiBsB,YAE1D1C,EAAOoB,iBAAiBuB,WACrBzE,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,eAAmB,IAAE2B,EAAOoB,iBAAiBuB,UAAUC,eAErE5C,EAAOoB,iBAAiByB,QACrB3E,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAE2B,EAAOoB,iBAAiByB,UAExD7C,EAAOoB,iBAAiB0B,SAAW9C,EAAOoB,iBAAiB0B,QAAQnD,OAAS,GACzEzB,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,aACH2B,EAAOoB,iBAAiB0B,QAAQ/E,KAAI,CAACgF,EAAQtC,IAC1ClC,cAAA,OAAAF,SACIH,eAAA,KAAAG,SAAA,CAAGH,eAAA,UAAAG,SAAA,CAAS0E,EAAOC,YAAY,OAAU,IAAED,EAAOE,SAD5CxC,QAMrBT,EAAOoB,iBAAiBG,OACrBrD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,WAAe,IAAE2B,EAAOoB,iBAAiBG,MAAMC,KAAK,SAElExB,EAAOoB,iBAAiBF,KACrBhD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,SAAa,IAACE,cAAA,KAAGgC,KAAMP,EAAOoB,iBAAiBF,IAAKpD,OAAO,SAASqD,IAAI,sBAAqB9C,SAAE2B,EAAOoB,iBAAiBF,SAErIlB,EAAOoB,iBAAiB8B,UACrBhF,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiB8B,YAE1DlD,EAAOoB,iBAAiB+B,SACrBjF,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,aAAiB,IAACE,cAAA,KAAGgC,KAAMP,EAAOoB,iBAAiB+B,QAASrF,OAAO,SAASqD,IAAI,sBAAqB9C,SAAE2B,EAAOoB,iBAAiB+B,qBAjIpKxF,OAPLyF,IAACvD,EAAOC,CAiJf,E,MC9BCuD,MAhIGnG,IAAkB,IAAjB,QAAE8B,GAAS9B,EAC1B,MAAMqC,EAAeC,IACTA,GAAqC,IAA7BC,OAAOC,KAAKF,GAAMG,QAAiBH,EAAKI,OAASJ,EAAKI,MAAMD,OAAS,EAGzF,OACIzB,eAAA,OAAKI,UAAU,sBAAqBD,SAAA,CAChCH,eAAC+B,IAAM,CAAA5B,SAAA,CACHE,cAAA,SAAAF,SAAO,0CACPE,cAAA,QAAMhB,KAAK,cAAc2C,QAAQ,sHACjC3B,cAAA,QAAMhB,KAAK,WAAW2C,QAAQ,gFAC9B3B,cAAA,QAAM6B,SAAS,WAAWF,QAAQ,0CAClC3B,cAAA,QAAM6B,SAAS,iBAAiBF,QAAQ,sHACxC3B,cAAA,QAAM6B,SAAS,SAASF,QAASG,OAAOC,SAASC,OACjDhC,cAAA,QAAMhB,KAAK,eAAe2C,QAAQ,wBAClC3B,cAAA,QAAMhB,KAAK,gBAAgB2C,QAAQ,0CACnC3B,cAAA,QAAMhB,KAAK,sBAAsB2C,QAAQ,yHAE7C3B,cAAA,MAAAF,SAAI,wBACHW,EAAQjB,KAAI,CAACiC,EAAQrC,IAClBO,eAAA,OAAiBI,UAAU,iBAAgBD,SAAA,CACvCE,cAAA,MAAID,UAAU,eAAcD,SAAE2B,EAAOzC,OACrCW,eAAA,OAAKI,UAAU,eAAcD,SAAA,CACzBE,cAAA,UAAAF,SAAQ,aAAiB,IAAE2B,EAAOxC,QAAQ,IAACe,cAAA,SAC3CA,cAAA,UAAAF,SAAQ,YAAgB,IAAE2B,EAAOvC,UAErCS,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,4BACHkB,EAAYS,EAAOQ,cAChBjC,cAAA,KAAAF,SAAG,2CAEHE,cAAA,OAAKD,UAAU,iBAAgBD,SAC1B2B,EAAOQ,aAAazC,KAAI,CAACyB,EAAMiB,IAC5BlC,cAAA,OAAeD,UAAU,kBAAiBD,SACrCoB,OAAOC,KAAKF,GAAMzB,KAAK2C,GACpBxC,eAAA,KAAAG,SAAA,CAAaH,eAAA,UAAAG,SAAA,CAASqC,EAAIC,QAAQ,KAAM,KAAK,OAAU,IAAEnB,EAAKkB,KAAtDA,MAFND,UAS1BvC,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,eACHkB,EAAYS,EAAOY,UAChBrC,cAAA,KAAAF,SAAG,qCAEH2B,EAAOY,SAAS7C,KAAI,CAAC8C,EAAMJ,IACvBvC,eAAA,OAAeI,UAAU,eAAcD,SAAA,CACnCE,cAAA,MAAAF,SAAKwC,EAAKC,QACV5C,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAEwC,EAAKE,OAAOxD,QACzCW,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAEwC,EAAKG,UAClCzC,cAAA,KAAAF,SAAIwC,EAAKI,cACT1C,cAAA,KAAGgC,KAAMM,EAAKK,IAAKpD,OAAO,SAASqD,IAAI,sBAAqB9C,SAAC,gBALvDoC,QAUtBvC,eAAA,OAAKI,UAAU,UAASD,SAAA,CACpBE,cAAA,MAAAF,SAAI,wBACHkB,EAAYS,EAAOoB,kBAChB7C,cAAA,KAAAF,SAAG,gDAEHH,eAAA,OAAKI,UAAU,iBAAgBD,SAAA,CAC1B2B,EAAOoB,iBAAiBC,oBACrBnD,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,wBACH2B,EAAOoB,iBAAiBC,mBAAmBtD,KAAI,CAACuD,EAAWb,IACxDvC,eAAA,KAAAG,SAAA,CAAaH,eAAA,UAAAG,SAAA,CAASiD,EAAUC,MAAMC,KAAK,MAAM,OAAU,IAAEF,EAAUG,YAA/DhB,QAInBT,EAAOoB,iBAAiBM,mBACrBxD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,uBAA2B,IAAE2B,EAAOoB,iBAAiBM,qBAEnE1B,EAAOoB,iBAAiBO,cACrBzD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,kBAAsB,IAAE2B,EAAOoB,iBAAiBO,gBAE9D3B,EAAOoB,iBAAiBQ,4BACrB1D,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,gCAAoC,IAAE2B,EAAOoB,iBAAiBQ,8BAE5E5B,EAAOoB,iBAAiBS,UAAY7B,EAAOoB,iBAAiBS,SAASvB,UAClEpC,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,cACJH,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiBS,SAASvB,SAASwB,OACzE5D,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,eAAmB,IAAE2B,EAAOoB,iBAAiBS,SAASvB,SAASyB,UAGjF/B,EAAOoB,iBAAiBsB,UACrBxE,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiBsB,YAE1D1C,EAAOoB,iBAAiBuB,WACrBzE,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,eAAmB,IAAE2B,EAAOoB,iBAAiBuB,UAAUC,eAErE5C,EAAOoB,iBAAiByB,QACrB3E,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,YAAgB,IAAE2B,EAAOoB,iBAAiByB,UAExD7C,EAAOoB,iBAAiB0B,SAAW9C,EAAOoB,iBAAiB0B,QAAQnD,OAAS,GACzEzB,eAAA,OAAAG,SAAA,CACIE,cAAA,MAAAF,SAAI,aACH2B,EAAOoB,iBAAiB0B,QAAQ/E,KAAI,CAACgF,EAAQtC,IAC1ClC,cAAA,OAAAF,SACIH,eAAA,KAAAG,SAAA,CAAGH,eAAA,UAAAG,SAAA,CAAS0E,EAAOC,YAAY,OAAU,IAAED,EAAOE,SAD5CxC,QAMrBT,EAAOoB,iBAAiBG,OACrBrD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,WAAe,IAAE2B,EAAOoB,iBAAiBG,MAAMC,KAAK,SAElExB,EAAOoB,iBAAiBF,KACrBhD,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,SAAa,IAACE,cAAA,KAAGgC,KAAMP,EAAOoB,iBAAiBF,IAAKpD,OAAO,SAASqD,IAAI,sBAAqB9C,SAAE2B,EAAOoB,iBAAiBF,SAErIlB,EAAOoB,iBAAiB8B,UACrBhF,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,cAAkB,IAAE2B,EAAOoB,iBAAiB8B,YAE1DlD,EAAOoB,iBAAiB+B,SACrBjF,eAAA,KAAAG,SAAA,CAAGE,cAAA,UAAAF,SAAQ,aAAiB,IAACE,cAAA,KAAGgC,KAAMP,EAAOoB,iBAAiB+B,QAASrF,OAAO,SAASqD,IAAI,sBAAqB9C,SAAE2B,EAAOoB,iBAAiB+B,qBAjGpJxF,OAwGZ,ECvBC2F,MAjGf,WACI,MAAOtE,EAASuE,GAAcjG,mBAAS,KAChCkG,EAAQC,GAAanG,mBAAS,CACjCoG,SAAU,EACV7C,KAAM,EACN8C,aAAc,KAEX1E,EAAc2E,GAAmBtG,oBAAS,IAC1C4B,EAAU2E,GAAevG,oBAAS,IAClC6B,EAAkB2E,GAAuBxG,oBAAS,IAClDyG,EAAeC,GAAoB1G,oBAAS,IAC5C8B,EAAaC,GAAkB/B,mBAAS,GAqCzC2G,EAAgBC,IAClBN,GAAgB,GAChBC,GAAY,GACZC,GAAoB,GACpBE,GAAiB,GACjBE,GAAeC,IAAcA,IAC7B9E,EAAe,EAAE,EAOrB,OACInB,eAAA,OAAKI,UAAU,MAAKD,SAAA,CAChBE,cAAA,OAAKD,UAAU,SAAQD,SAAC,iCACxBH,eAAA,OAAKI,UAAU,YAAWD,SAAA,CACtBE,cAACtB,EAAW,CAACE,iBAnDFiH,UACnB,IACI,MAAMC,QAAiBC,MAAM,GAADnE,OAlBxBoC,oEAkBmC,WAAW,CAC9CgC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEvH,gBAErBoC,QAAa6E,EAASO,OAC5BrB,EAAW/D,GAEX,MAAMqF,EAAY,CACdnB,SAAU,EACV7C,KAAM,EACN8C,aAAc,GAGlBnE,EAAKsF,SAAQ9E,IACLA,EAAOQ,eAAiBR,EAAOQ,aAAaZ,QAAOiF,EAAUnB,UAAY1D,EAAOQ,aAAab,QAC7FK,EAAOY,WAAaZ,EAAOY,SAAShB,QAAOiF,EAAUhE,MAAQb,EAAOY,SAASjB,QAC7EK,EAAOoB,mBAAqBpB,EAAOoB,iBAAiBxB,OAAOiF,EAAUlB,cAAc,IAG3FF,EAAUoB,GACVjB,GAAgB,GAChBC,GAAY,GACZC,GAAoB,GACpBE,GAAiB,EACrB,CAAE,MAAOpE,GACLmF,QAAQnF,MAAM,2BAA4BA,EAC9C,KAqBQ1B,eAAA,OAAKI,UAAU,mBAAkBD,SAAA,CAC5BW,EAAQW,OAAS,GACdzB,eAAA8G,WAAA,CAAA3G,SAAA,CACIH,eAAA,OAAKI,UAAU,kBAAiBD,SAAA,CAC5BH,eAAA,UAAQW,QAASA,IAAMoF,EAAaL,GAAiBvF,SAAA,CAAC,yBAAuBmF,EAAOE,SAAS,OAC7FxF,eAAA,UAAQW,QAASA,IAAMoF,EAAaJ,GAAaxF,SAAA,CAAC,qBAAmBmF,EAAO3C,KAAK,OACjF3C,eAAA,UAAQW,QAASA,IAAMoF,EAAaH,GAAqBzF,SAAA,CAAC,8BAA4BmF,EAAOG,aAAa,UAE9GpF,cAAA,UAAQM,QAjBAoG,KAC5BjB,GAAiBG,IAAcA,GAAU,EAgBoB9F,SAAC,2BAGhD0F,GACExF,cAACQ,EAAM,CACHC,QAASA,EACTC,aAAcA,EACdC,SAAUA,EACVC,iBAAkBA,EAClBC,YAAaA,EACbC,eAAgBA,EAChBC,aAzEH,KA4EJyE,GACGxF,cAAC8E,EAAS,CAACrE,QAASA,YAM5C,EClGAkG,IAASC,OACP5G,cAAC6G,IAAMC,WAAU,CAAAhH,SACfE,cAAC+E,EAAG,MAENgC,SAASC,eAAe,Q","file":"static/js/main.2c130090.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CompanyForm = ({ onGenerateReport }) => {\r\n    const [companies, setCompanies] = useState([{ name: '', address: '', domain: '' }]);\r\n\r\n    const handleChange = (index, event) => {\r\n        const { name, value } = event.target;\r\n        setCompanies(companies.map((company, i) => (\r\n            i === index ? { ...company, [name]: value } : company\r\n        )));\r\n    };\r\n\r\n    const handleAddCompany = () => {\r\n        setCompanies([...companies, { name: '', address: '', domain: '' }]);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        onGenerateReport(companies);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {companies.map((company, index) => (\r\n                <div key={index} className=\"company-inputs\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Company Name\"\r\n                        value={company.name}\r\n                        onChange={(e) => handleChange(index, e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        placeholder=\"Company Address\"\r\n                        value={company.address}\r\n                        onChange={(e) => handleChange(index, e)}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"domain\"\r\n                        placeholder=\"Company Domain\"\r\n                        value={company.domain}\r\n                        onChange={(e) => handleChange(index, e)}\r\n                    />\r\n                </div>\r\n            ))}\r\n            <div className=\"form-actions\">\r\n                <button type=\"button\" onClick={handleAddCompany}>Add Another Company</button>\r\n                <button type=\"submit\">Generate Report</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport './Report.css';\r\n\r\nconst Report = ({\r\n    results,\r\n    showVeridion,\r\n    showNews,\r\n    showGooglePlaces,\r\n    currentPage,\r\n    setCurrentPage,\r\n    itemsPerPage\r\n}) => {\r\n    const isEmptyData = (data) => {\r\n        return !data || Object.keys(data).length === 0 || (data.error && data.error.length > 0);\r\n    };\r\n\r\n    const paginate = (array, pageNumber) => {\r\n        return array.slice((pageNumber - 1) * itemsPerPage, pageNumber * itemsPerPage);\r\n    };\r\n\r\n    return (\r\n        <div className=\"report-container\">\r\n            {paginate(results, currentPage).map((result, index) => (\r\n                <div key={index} className=\"result-card\">\r\n                    <Helmet>\r\n                        <title>{result.name} - Company Report</title>\r\n                        <meta name=\"description\" content={`Detailed report for ${result.name}`} />\r\n                        <meta name=\"keywords\" content={`company report, ${result.name}, business data`} />\r\n                        <meta property=\"og:title\" content={`${result.name} - Company Report`} />\r\n                        <meta property=\"og:description\" content={`Detailed report for ${result.name}`} />\r\n                        <meta property=\"og:url\" content={window.location.href} />\r\n                        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                        <meta name=\"twitter:title\" content={`${result.name} - Company Report`} />\r\n                        <meta name=\"twitter:description\" content={`Detailed report for ${result.name}`} />\r\n                    </Helmet>\r\n                    <h3 className=\"company-name\">{result.name}</h3>\r\n                    <div className=\"company-info\">\r\n                        <strong>Address:</strong> {result.address} <br />\r\n                        <strong>Domain:</strong> {result.domain}\r\n                    </div>\r\n                    {showVeridion && (\r\n                        <div className=\"section\">\r\n                            <h3>Veridion Data:</h3>\r\n                            {isEmptyData(result.veridionData) ? (\r\n                                <p>No relevant information from Veridion.</p>\r\n                            ) : (\r\n                                <div className=\"formatted-data\">\r\n                                    {result.veridionData.map((data, idx) => (\r\n                                        <div key={idx} className=\"veridion-record\">\r\n                                            {Object.keys(data).map((key) => (\r\n                                                <p key={key}><strong>{key.replace(/_/g, ' ')}:</strong> {data[key]}</p>\r\n                                            ))}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {showNews && (\r\n                        <div className=\"section\">\r\n                            <h3>News Data:</h3>\r\n                            {isEmptyData(result.newsData) ? (\r\n                                <p>No relevant news articles found.</p>\r\n                            ) : (\r\n                                result.newsData.map((news, idx) => (\r\n                                    <div key={idx} className=\"news-article\">\r\n                                        <h4>{news.title}</h4>\r\n                                        <p><strong>Source:</strong> {news.source.name}</p>\r\n                                        <p><strong>Author:</strong> {news.author}</p>\r\n                                        <p>{news.description}</p>\r\n                                        <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {showGooglePlaces && (\r\n                                    <div className=\"section\">\r\n                                        <h3>Google Places Data:</h3>\r\n                                        {isEmptyData(result.googlePlacesData) ? (\r\n                                            <p>No relevant information from Google Places.</p>\r\n                                        ) : (\r\n                                            <div className=\"formatted-data\">\r\n                                                {result.googlePlacesData.address_components && result.googlePlacesData.address_components.length > 0 && (\r\n                                                    <div>\r\n                                                        <h4>Address Components:</h4>\r\n                                                        {result.googlePlacesData.address_components.map((component, idx) => (\r\n                                                            <p key={idx}><strong>{component.types.join(', ')}:</strong> {component.long_name}</p>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                )}\r\n                                                {result.googlePlacesData.formatted_address && (\r\n                                                    <p><strong>Formatted Address:</strong> {result.googlePlacesData.formatted_address}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.phone_number && (\r\n                                                    <p><strong>Phone Number:</strong> {result.googlePlacesData.phone_number}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.international_phone_number && (\r\n                                                    <p><strong>International Phone Number:</strong> {result.googlePlacesData.international_phone_number}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.geometry && result.googlePlacesData.geometry.location && (\r\n                                                    <div>\r\n                                                        <h4>Geometry:</h4>\r\n                                                        <p><strong>Latitude:</strong> {result.googlePlacesData.geometry.location.lat}</p>\r\n                                                        <p><strong>Longitude:</strong> {result.googlePlacesData.geometry.location.lng}</p>\r\n                                                    </div>\r\n                                                )}\r\n                                                {result.googlePlacesData.opening_hours && result.googlePlacesData.opening_hours.weekday_text && result.googlePlacesData.opening_hours.weekday_text.length > 0 && (\r\n                                                    <div>\r\n                                                        <h4>Opening Hours:</h4>\r\n                                                        {result.googlePlacesData.opening_hours.weekday_text.map((hours, idx) => (\r\n                                                            <p key={idx}>{hours}</p>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                )}\r\n                                                {result.googlePlacesData.photos && result.googlePlacesData.photos.length > 0 && (\r\n                                                    <div>\r\n                                                        <h4>Photos:</h4>\r\n                                                        {result.googlePlacesData.photos.map((photo, idx) => (\r\n                                                            <img key={idx} src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${photo.photo_reference}&key=${process.env.REACT_APP_GOOGLE_PLACES_API_KEY}`} alt=\"Place\" />\r\n                                                        ))}\r\n                                                    </div>\r\n                                                )}\r\n                                                {result.googlePlacesData.place_id && (\r\n                                                    <p><strong>Place ID:</strong> {result.googlePlacesData.place_id}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.plus_code && (\r\n                                                    <p><strong>Plus Code:</strong> {result.googlePlacesData.plus_code.global_code}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.rating && (\r\n                                                    <p><strong>Rating:</strong> {result.googlePlacesData.rating}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.reviews && result.googlePlacesData.reviews.length > 0 && (\r\n                                                    <div>\r\n                                                        <h4>Reviews:</h4>\r\n                                                        {result.googlePlacesData.reviews.map((review, idx) => (\r\n                                                            <div key={idx}>\r\n                                                                <p><strong>{review.author_name}:</strong> {review.text}</p>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                )}\r\n                                                {result.googlePlacesData.types && (\r\n                                                    <p><strong>Types:</strong> {result.googlePlacesData.types.join(', ')}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.url && (\r\n                                                    <p><strong>URL:</strong> <a href={result.googlePlacesData.url} target=\"_blank\" rel=\"noopener noreferrer\">{result.googlePlacesData.url}</a></p>\r\n                                                )}\r\n                                                {result.googlePlacesData.vicinity && (\r\n                                                    <p><strong>Vicinity:</strong> {result.googlePlacesData.vicinity}</p>\r\n                                                )}\r\n                                                {result.googlePlacesData.website && (\r\n                                                    <p><strong>Website:</strong> <a href={result.googlePlacesData.website} target=\"_blank\" rel=\"noopener noreferrer\">{result.googlePlacesData.website}</a></p>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({ results }) => {\r\n    const isEmptyData = (data) => {\r\n        return !data || Object.keys(data).length === 0 || (data.error && data.error.length > 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <Helmet>\r\n                <title>Generated Dashboard - Company Reports</title>\r\n                <meta name=\"description\" content=\"Generated dashboard with detailed company reports including Veridion data, news articles, and Google Places data.\" />\r\n                <meta name=\"keywords\" content=\"company reports, SEO, business data, Veridion, Google Places, news articles\" />\r\n                <meta property=\"og:title\" content=\"Generated Dashboard - Company Reports\" />\r\n                <meta property=\"og:description\" content=\"Generated dashboard with detailed company reports including Veridion data, news articles, and Google Places data.\" />\r\n                <meta property=\"og:url\" content={window.location.href} />\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:title\" content=\"Generated Dashboard - Company Reports\" />\r\n                <meta name=\"twitter:description\" content=\"Generated dashboard with detailed company reports including Veridion data, news articles, and Google Places data.\" />\r\n            </Helmet>\r\n            <h2>Generated Dashboard</h2>\r\n            {results.map((result, index) => (\r\n                <div key={index} className=\"dashboard-card\">\r\n                    <h3 className=\"company-name\">{result.name}</h3>\r\n                    <div className=\"company-info\">\r\n                        <strong>Address:</strong> {result.address} <br />\r\n                        <strong>Domain:</strong> {result.domain}\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <h3>Veridion Relevant Info:</h3>\r\n                        {isEmptyData(result.veridionData) ? (\r\n                            <p>No relevant information from Veridion.</p>\r\n                        ) : (\r\n                            <div className=\"formatted-data\">\r\n                                {result.veridionData.map((data, idx) => (\r\n                                    <div key={idx} className=\"veridion-record\">\r\n                                        {Object.keys(data).map((key) => (\r\n                                            <p key={key}><strong>{key.replace(/_/g, ' ')}:</strong> {data[key]}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <h3>News Data:</h3>\r\n                        {isEmptyData(result.newsData) ? (\r\n                            <p>No relevant news articles found.</p>\r\n                        ) : (\r\n                            result.newsData.map((news, idx) => (\r\n                                <div key={idx} className=\"news-article\">\r\n                                    <h4>{news.title}</h4>\r\n                                    <p><strong>Source:</strong> {news.source.name}</p>\r\n                                    <p><strong>Author:</strong> {news.author}</p>\r\n                                    <p>{news.description}</p>\r\n                                    <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <h3>Google Places Data:</h3>\r\n                        {isEmptyData(result.googlePlacesData) ? (\r\n                            <p>No relevant information from Google Places.</p>\r\n                        ) : (\r\n                            <div className=\"formatted-data\">\r\n                                {result.googlePlacesData.address_components && (\r\n                                    <div>\r\n                                        <h4>Address Components:</h4>\r\n                                        {result.googlePlacesData.address_components.map((component, idx) => (\r\n                                            <p key={idx}><strong>{component.types.join(', ')}:</strong> {component.long_name}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                {result.googlePlacesData.formatted_address && (\r\n                                    <p><strong>Formatted Address:</strong> {result.googlePlacesData.formatted_address}</p>\r\n                                )}\r\n                                {result.googlePlacesData.phone_number && (\r\n                                    <p><strong>Phone Number:</strong> {result.googlePlacesData.phone_number}</p>\r\n                                )}\r\n                                {result.googlePlacesData.international_phone_number && (\r\n                                    <p><strong>International Phone Number:</strong> {result.googlePlacesData.international_phone_number}</p>\r\n                                )}\r\n                                {result.googlePlacesData.geometry && result.googlePlacesData.geometry.location && (\r\n                                    <div>\r\n                                        <h4>Geometry:</h4>\r\n                                        <p><strong>Latitude:</strong> {result.googlePlacesData.geometry.location.lat}</p>\r\n                                        <p><strong>Longitude:</strong> {result.googlePlacesData.geometry.location.lng}</p>\r\n                                    </div>\r\n                                )}\r\n                                {result.googlePlacesData.place_id && (\r\n                                    <p><strong>Place ID:</strong> {result.googlePlacesData.place_id}</p>\r\n                                )}\r\n                                {result.googlePlacesData.plus_code && (\r\n                                    <p><strong>Plus Code:</strong> {result.googlePlacesData.plus_code.global_code}</p>\r\n                                )}\r\n                                {result.googlePlacesData.rating && (\r\n                                    <p><strong>Rating:</strong> {result.googlePlacesData.rating}</p>\r\n                                )}\r\n                                {result.googlePlacesData.reviews && result.googlePlacesData.reviews.length > 0 && (\r\n                                    <div>\r\n                                        <h4>Reviews:</h4>\r\n                                        {result.googlePlacesData.reviews.map((review, idx) => (\r\n                                            <div key={idx}>\r\n                                                <p><strong>{review.author_name}:</strong> {review.text}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                {result.googlePlacesData.types && (\r\n                                    <p><strong>Types:</strong> {result.googlePlacesData.types.join(', ')}</p>\r\n                                )}\r\n                                {result.googlePlacesData.url && (\r\n                                    <p><strong>URL:</strong> <a href={result.googlePlacesData.url} target=\"_blank\" rel=\"noopener noreferrer\">{result.googlePlacesData.url}</a></p>\r\n                                )}\r\n                                {result.googlePlacesData.vicinity && (\r\n                                    <p><strong>Vicinity:</strong> {result.googlePlacesData.vicinity}</p>\r\n                                )}\r\n                                {result.googlePlacesData.website && (\r\n                                    <p><strong>Website:</strong> <a href={result.googlePlacesData.website} target=\"_blank\" rel=\"noopener noreferrer\">{result.googlePlacesData.website}</a></p>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport CompanyForm from './components/CompanyForm';\r\nimport Report from './components/Report';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nfunction App() {\r\n    const [results, setResults] = useState([]);\r\n    const [counts, setCounts] = useState({\r\n        veridion: 0,\r\n        news: 0,\r\n        googlePlaces: 0,\r\n    });\r\n    const [showVeridion, setShowVeridion] = useState(false);\r\n    const [showNews, setShowNews] = useState(false);\r\n    const [showGooglePlaces, setShowGooglePlaces] = useState(false);\r\n    const [showDashboard, setShowDashboard] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n\r\n    const generateReport = async (companies) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/enrich`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ companies }),\r\n            });\r\n            const data = await response.json();\r\n            setResults(data);\r\n\r\n            const newCounts = {\r\n                veridion: 0,\r\n                news: 0,\r\n                googlePlaces: 0,\r\n            };\r\n\r\n            data.forEach(result => {\r\n                if (result.veridionData && !result.veridionData.error) newCounts.veridion += result.veridionData.length;\r\n                if (result.newsData && !result.newsData.error) newCounts.news += result.newsData.length;\r\n                if (result.googlePlacesData && !result.googlePlacesData.error) newCounts.googlePlaces++;\r\n            });\r\n\r\n            setCounts(newCounts);\r\n            setShowVeridion(false);\r\n            setShowNews(false);\r\n            setShowGooglePlaces(false);\r\n            setShowDashboard(false);\r\n        } catch (error) {\r\n            console.error('Error generating report:', error);\r\n        }\r\n    };\r\n\r\n    const handleToggle = (toggleFunction) => {\r\n        setShowVeridion(false);\r\n        setShowNews(false);\r\n        setShowGooglePlaces(false);\r\n        setShowDashboard(false);\r\n        toggleFunction(prevState => !prevState);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handleGenerateDashboard = () => {\r\n        setShowDashboard(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"header\">Company Enrichment Dashboard</div>\r\n            <div className=\"container\">\r\n                <CompanyForm onGenerateReport={generateReport} />\r\n                <div className=\"result-container\">\r\n                    {results.length > 0 && (\r\n                        <>\r\n                            <div className=\"summary-buttons\">\r\n                                <button onClick={() => handleToggle(setShowVeridion)}>Toggle Veridion Data ({counts.veridion})</button>\r\n                                <button onClick={() => handleToggle(setShowNews)}>Toggle News Data ({counts.news})</button>\r\n                                <button onClick={() => handleToggle(setShowGooglePlaces)}>Toggle Google Places Data ({counts.googlePlaces})</button>\r\n                            </div>\r\n                            <button onClick={handleGenerateDashboard}>Generate Dashboard</button>\r\n                        </>\r\n                    )}\r\n                    {!showDashboard && (\r\n                        <Report\r\n                            results={results}\r\n                            showVeridion={showVeridion}\r\n                            showNews={showNews}\r\n                            showGooglePlaces={showGooglePlaces}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                        />\r\n                    )}\r\n                    {showDashboard && (\r\n                        <Dashboard results={results} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}